// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  clients   Client[]
  missions  Mission[]
  sessions  Session[]
  logs      AuditLog[]
}

model Client {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  name      String
  email     String
  company   String?
  missions  Mission[]
}

model Mission {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  client    Client    @relation(fields: [clientId], references: [id])
  clientId  String
  title     String
  amount    Float
  status    MissionStatus @default(PENDING)
  date      DateTime
}

model Session {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  refreshToken String
  ip          String?
  userAgent   String?
  createdAt   DateTime @default(now())
  expiresAt   DateTime
}

model AuditLog {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  action     String
  entityType String
  entityId   String
  timestamp  DateTime @default(now())
}

enum MissionStatus {
  PENDING
  PAID
}
